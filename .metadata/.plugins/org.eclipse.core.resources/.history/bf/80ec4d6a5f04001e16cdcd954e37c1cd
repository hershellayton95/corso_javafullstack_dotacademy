package lezione3;

import lezione3.forme.Circle;
import lezione3.forme.Rectangle;
import lezione3.forme.Shape;
import lezione3.forme.Square;
import lezione3.forme.Triangle;

public class AreaLavoro {

	public static void main(String[] args) {

		Rectangle rectangle1 = new Rectangle(0,0, 2.0, 1.0);
		Square square1 = new Square(0,0, 1.0);
		Triangle triangle1 = new Triangle(0,0, 2.0, 1.0);
		Circle circle1 = new Circle(0,0, 1.0);


		rectangle1.show();
		rectangle1.move(1,1);
		System.out.println("------------");
		square1.show();
		square1.move(1,1);
		System.out.println("------------");
		triangle1.show();
		triangle1.move(1,1);
		System.out.println("------------");
		circle1.show();
		circle1.move(1,1);
		System.out.println("------------");
		System.out.println("------------");

		Shape shapes[] = new Shape[4];

		//uppercasting tipo un boxing da una forma passo a shape
		shapes[0] = rectangle1;
		shapes[1] = square1;
		shapes[2] = triangle1;
		shapes[3] = circle1;


		for (int i = 0;  i < shapes.length; i++) {
			System.out.println("shape["+i+"]=" + shapes[i]);
		}
		System.out.println("------------");
		System.out.println("------------");
		for (int i = 0;  i < shapes.length; i++) {
			System.out.println("shape["+i+"]=" + shapes[i]);
			//			shapes[i].move() esiste nei figli di shape e quindi non posso accedere

			if(shapes[i] instanceof Circle) {
				System.out.println("Circle");
				Circle instance = (Circle) shapes[i]; // downcasting
				instance.show();
				instance.move(0,0);
				instance.ovalizza();
			} else if(shapes[i] instanceof Rectangle){
				Rectangle instance = (Rectangle) shapes[i]; // downcasting
				if(shapes[i] instanceof Square){
					System.out.println("Square");
					Square square = (Square) shapes[i]; // downcasting
					square.show();
					square.move(0,0);
				} else {
					System.out.println("Rectangle");
					instance.show();
					instance.move(0,0);
				}
				
			} else if(shapes[i] instanceof Triangle){
				System.out.println("Triangle");
				Triangle instance = (Triangle) shapes[i]; // downcasting
			} else {
				System.out.println("Forma non supportata");
			}
			System.out.println("------------");
				
		}
		System.out.println("------------");
		System.out.println("------------");
		

//		//astraiamo shape
////		Shape shapes2[] = new Shape[5];
//		Shape shapes2[] = new Shape[4];
//		shapes2[0] = rectangle1;
//		shapes2[1] = square1;
//		shapes2[2] = triangle1;
//		shapes2[3] = circle1;
////		shapes2[4] = new Shape(0,0);
//		for (int i = 0;  i < shapes2.length; i++) {
//			shapes2[i].show();
//			shapes2[i].move(22,22);
//			System.out.println("------------");
//		}
//		System.out.println("------------");
//		System.out.println("------------");
	}

}
